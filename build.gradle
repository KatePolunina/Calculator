buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    flatDir {
        dirs 'libs'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "${minecraft_version}-${mod_version}"
group= "sonar.calculator.mod"
archivesBaseName = "mod"
sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${forge_version}"
    runDir = "run"
    replace "@VERSION@", "${mod_version}"
    replace "sonarcore@[0.0.0,)", "sonarcore@[" + "${sonar_core_version}" +",)"
    mappings = "snapshot_20171003"
    makeObfSourceJar = false

}

task deobfJar(type: Jar) { // Generate deobfuscated
    from sourceSets.main.output
    classifier = 'deobf'
    archiveName = "calculator-${minecraft_version}-${mod_version}-deobf.jar"
}
tasks.build.dependsOn('deobfJar')
artifacts {
    archives deobfJar
    archives jar
}

jar {
    archiveName = "calculator-${minecraft_version}-${mod_version}.jar"
}

def sonarcore_local = false
if (project.allprojects.findAll({it.name == "Sonar-Core"}).size() > 0) {
    sonarcore_local = true
}

dependencies {
    compileOnly "tesla:Tesla:${tesla_version}"
    deobfCompile "cofh:RedstoneFlux:${redstoneflux_version}"
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    compileOnly "crafttweaker:CraftTweaker2:${crafttweaker_version}"
    compile group: "net.industrial-craft", name: "industrialcraft-2", version: "2.8.75-ex112", classifier: "api"
    compile group: "net.industrial-craft", name: "industrialcraft-2", version: "2.8.75-ex112", classifier: "dev"
    if (!sonarcore_local) {
        //compileOnly "sonar-core:sonarcore:${minecraft_version}:${sonar_core_version}:deobf"
    } else {
        compile project(':Sonar-Core')
    }
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version


    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'                

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }        

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
